1. Node.js是运行在服务端的JS。

2. events.EventEmitter: 事件的触发与事件监听器功能的封装。

3. JavaScript语言自身只有字符串数据属性，没有二进制数据属性。
Buffer类: 为Node.js带来了一种存储原始数据的方法，可以让Node.js处理
        二进制数据（当Node.js需要处理I/O操作中移动的数据时使用：处理TCP流或文件流等）。

4. Stream有四种流类型：
        Readable------可读操作
        Writable------可写操作
        Duplex--------发生错误时触发
        finish--------所有数据已被写入到底层系统时触发

5. 模块系统是为了让Node.js的文件可以相互调用。
   主要有四种模块：原生模块和三种文件模块（JS/JSON/C,C++编译文件）

6. Node.js具有全局对象global，所有的全局变量（除global本身）都是global的属性。
   global最根本的作用是作为全局变量的属性，满足以下条件的变量是全局变量：
   1.在最外层定义的变量 2.全局对象的属性 3.隐式定义的变量（未定义直接赋值的变量）。
   注：
        1.在node.js中不可能在最外层定义变量，因为所有用户代码都属于当前模块，而模块本身不是最外层上下文；
        2.永远使用var定义以避免映入全局变量，从而污染命名空间，提高代码耦合的风险。

7. Node.js常用工具util

8. Node.js文件系统模块（fs）
   